import java.util.ArrayList;

/**
 * @author vinst
 */
public class PoseidonApp extends javax.swing.JFrame {

    /**
     * Creates new form PoseidonApp
     */
    public PoseidonApp() {
        initComponents();

        try {
            query = new QueryShellchain();
        } catch (Exception e) {
            e.printStackTrace();
        }

        accounts = new ArrayList<River>();
        accounts.add(new River("Poseidon", 0, 0));
        rebuildAccountComboBoxes();

        mafias = new ArrayList<String>();
        mafias.add("Beta Cancri");
        mafias.add("Karka Rashi");
        mafias.add("Shiny Kinglers");
        rebuildMafiaComboBoxes();
    }

    public void rebuildAccountComboBoxes() {
        userSelectComboBox.setModel(new javax.swing.DefaultComboBoxModel(accounts.toArray()));
        tradeFishAccountComboBox.setModel(new javax.swing.DefaultComboBoxModel(accounts.toArray()));
        statusAccountComboBox.setModel(new javax.swing.DefaultComboBoxModel(accounts.toArray()));
    }

    public void rebuildMafiaComboBoxes() {
        reportCrabMafiaComboBox.setModel(new javax.swing.DefaultComboBoxModel(mafias.toArray()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        tabbedPane = new javax.swing.JTabbedPane();
        digShellsPanel = new javax.swing.JPanel();
        digShellsLabel = new javax.swing.JLabel();
        digShellsButton = new javax.swing.JButton();
        digShellsStatusLabel = new javax.swing.JLabel();
        createRiverPanel = new javax.swing.JPanel();
        createRiverLabel = new javax.swing.JLabel();
        createRiverNamePromptLabel = new javax.swing.JLabel();
        createRiverEnterNameTextField = new javax.swing.JTextField();
        createRiverGarbagePromptLabel = new javax.swing.JLabel();
        createRiverEnterGarbageTextField = new javax.swing.JTextField();
        createRiverFishPromptLabel = new javax.swing.JLabel();
        createRiverEnterFishTextField = new javax.swing.JTextField();
        createRiverSubmitButton = new javax.swing.JButton();
        createRiverStatusLabel = new javax.swing.JLabel();
        transactionsPanel = new javax.swing.JPanel();
        transactionsTabbedPane = new javax.swing.JTabbedPane();
        sellFishPanel = new javax.swing.JPanel();
        sellFishLabel = new javax.swing.JLabel();
        sellFishAmountPromptLabel = new javax.swing.JLabel();
        sellFishEnterAmountTextField = new javax.swing.JTextField();
        sellFishGarbagePromptLabel = new javax.swing.JLabel();
        sellFishEnterGarbageTextField = new javax.swing.JTextField();
        sellFishSubmitButton = new javax.swing.JButton();
        sellFishStatusLabel = new javax.swing.JLabel();
        tradeFishPanel = new javax.swing.JPanel();
        tradeFishLabel = new javax.swing.JLabel();
        tradeFishAccountComboBox = new javax.swing.JComboBox<>();
        tradeFishChooseAccountLabel = new javax.swing.JLabel();
        tradeFishAmountPromptLabel = new javax.swing.JLabel();
        tradeFishEnterAmountTextField = new javax.swing.JTextField();
        tradeFishSubmitButton = new javax.swing.JButton();
        tradeFishStatusLabel = new javax.swing.JLabel();
        reportCrabPanel = new javax.swing.JPanel();
        reportCrabLabel = new javax.swing.JLabel();
        reportCrabMafiaComboBox = new javax.swing.JComboBox<>();
        reportCrabMafiaPromptLabel = new javax.swing.JLabel();
        reportCrabAmountPromptLabel = new javax.swing.JLabel();
        reportCrabEnterAmountTextField = new javax.swing.JTextField();
        reportCrabGarbagePromptLabel = new javax.swing.JLabel();
        reportCrabEnterGarbageTextField = new javax.swing.JTextField();
        reportCrabSubmitButton = new javax.swing.JButton();
        reportCrabStatusLabel = new javax.swing.JLabel();
        statusPanel = new javax.swing.JPanel();
        statusAccountComboBox = new javax.swing.JComboBox<>();
        statusAccountPromptLabel = new javax.swing.JLabel();
        statusScrollPane = new javax.swing.JScrollPane();
        statusTextArea = new javax.swing.JTextArea();
        statusStatusButton = new javax.swing.JButton();
        userSelectComboBox = new javax.swing.JComboBox<>();
        userSelectPromptLabel = new javax.swing.JLabel();

        jLabel12.setText("jLabel12");

        jLabel15.setText("jLabel15");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Poseidon's Enterprise Resource Planner");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }

            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Meiryo UI", 0, 18)); // NOI18N
        titleLabel.setText("Poseidon's Enterprise Resource Planner");

        digShellsLabel.setText("Digging for shells allows you to publish all of the transactions your mermaids have done.");

        digShellsButton.setText("Dig");
        digShellsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                digShellsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout digShellsPanelLayout = new javax.swing.GroupLayout(digShellsPanel);
        digShellsPanel.setLayout(digShellsPanelLayout);
        digShellsPanelLayout.setHorizontalGroup(
                digShellsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(digShellsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(digShellsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(digShellsLabel)
                                        .addGroup(digShellsPanelLayout.createSequentialGroup()
                                                .addComponent(digShellsButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(digShellsStatusLabel)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        digShellsPanelLayout.setVerticalGroup(
                digShellsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(digShellsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(digShellsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(digShellsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(digShellsButton)
                                        .addComponent(digShellsStatusLabel))
                                .addContainerGap(168, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Dig for shells", digShellsPanel);

        createRiverLabel.setText("You can register a river under a mermaid name to increase business.");

        createRiverNamePromptLabel.setText("Enter a mermaid name:");

        createRiverGarbagePromptLabel.setText("Enter the amount of garbage in the river.");

        createRiverEnterGarbageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRiverEnterGarbageTextFieldActionPerformed(evt);
            }
        });

        createRiverFishPromptLabel.setText("Enter the amount of fish in the river.");

        createRiverEnterFishTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRiverEnterFishTextFieldActionPerformed(evt);
            }
        });

        createRiverSubmitButton.setText("Submit");
        createRiverSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRiverSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createRiverPanelLayout = new javax.swing.GroupLayout(createRiverPanel);
        createRiverPanel.setLayout(createRiverPanelLayout);
        createRiverPanelLayout.setHorizontalGroup(
                createRiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(createRiverPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(createRiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(createRiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(createRiverLabel)
                                                .addGroup(createRiverPanelLayout.createSequentialGroup()
                                                        .addComponent(createRiverNamePromptLabel)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(createRiverEnterNameTextField)))
                                        .addGroup(createRiverPanelLayout.createSequentialGroup()
                                                .addComponent(createRiverGarbagePromptLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(createRiverEnterGarbageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(createRiverPanelLayout.createSequentialGroup()
                                                .addComponent(createRiverFishPromptLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(createRiverEnterFishTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(createRiverPanelLayout.createSequentialGroup()
                                                .addComponent(createRiverSubmitButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(createRiverStatusLabel)))
                                .addContainerGap(103, Short.MAX_VALUE))
        );
        createRiverPanelLayout.setVerticalGroup(
                createRiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(createRiverPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(createRiverLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(createRiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(createRiverNamePromptLabel)
                                        .addComponent(createRiverEnterNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(createRiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(createRiverGarbagePromptLabel)
                                        .addComponent(createRiverEnterGarbageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(createRiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(createRiverFishPromptLabel)
                                        .addComponent(createRiverEnterFishTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(createRiverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(createRiverSubmitButton)
                                        .addComponent(createRiverStatusLabel))
                                .addContainerGap(90, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Create River", createRiverPanel);

        sellFishLabel.setText("You can sell fish to geese and swans in exchange for them taking away garbage.");

        sellFishAmountPromptLabel.setText("Enter the amount of fish sold:");

        sellFishEnterAmountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellFishEnterAmountTextFieldActionPerformed(evt);
            }
        });

        sellFishGarbagePromptLabel.setText("Enter the amount of garbage collected:");

        sellFishEnterGarbageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellFishEnterGarbageTextFieldActionPerformed(evt);
            }
        });

        sellFishSubmitButton.setText("Submit");
        sellFishSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellFishSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sellFishPanelLayout = new javax.swing.GroupLayout(sellFishPanel);
        sellFishPanel.setLayout(sellFishPanelLayout);
        sellFishPanelLayout.setHorizontalGroup(
                sellFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(sellFishPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(sellFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(sellFishLabel)
                                        .addGroup(sellFishPanelLayout.createSequentialGroup()
                                                .addComponent(sellFishAmountPromptLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sellFishEnterAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(sellFishPanelLayout.createSequentialGroup()
                                                .addComponent(sellFishGarbagePromptLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sellFishEnterGarbageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(sellFishPanelLayout.createSequentialGroup()
                                                .addComponent(sellFishSubmitButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sellFishStatusLabel)))
                                .addContainerGap(18, Short.MAX_VALUE))
        );
        sellFishPanelLayout.setVerticalGroup(
                sellFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(sellFishPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(sellFishLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(sellFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(sellFishAmountPromptLabel)
                                        .addComponent(sellFishEnterAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(sellFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(sellFishGarbagePromptLabel)
                                        .addComponent(sellFishEnterGarbageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(sellFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(sellFishSubmitButton)
                                        .addComponent(sellFishStatusLabel))
                                .addContainerGap(66, Short.MAX_VALUE))
        );

        transactionsTabbedPane.addTab("Sell Fish", sellFishPanel);

        tradeFishLabel.setText("You can transfer fish between your river and someone else's.");

        tradeFishAccountComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));

        tradeFishChooseAccountLabel.setText("Choose a river to transfer fish to.");

        tradeFishAmountPromptLabel.setText("Enter an amount of fish to transfer:");

        tradeFishEnterAmountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tradeFishEnterAmountTextFieldActionPerformed(evt);
            }
        });

        tradeFishSubmitButton.setText("Submit");
        tradeFishSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tradeFishSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tradeFishPanelLayout = new javax.swing.GroupLayout(tradeFishPanel);
        tradeFishPanel.setLayout(tradeFishPanelLayout);
        tradeFishPanelLayout.setHorizontalGroup(
                tradeFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tradeFishPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(tradeFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tradeFishLabel)
                                        .addGroup(tradeFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tradeFishPanelLayout.createSequentialGroup()
                                                        .addComponent(tradeFishAmountPromptLabel)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(tradeFishEnterAmountTextField))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tradeFishPanelLayout.createSequentialGroup()
                                                        .addComponent(tradeFishAccountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(tradeFishChooseAccountLabel)))
                                        .addGroup(tradeFishPanelLayout.createSequentialGroup()
                                                .addComponent(tradeFishSubmitButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tradeFishStatusLabel)))
                                .addContainerGap(111, Short.MAX_VALUE))
        );
        tradeFishPanelLayout.setVerticalGroup(
                tradeFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tradeFishPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(tradeFishLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(tradeFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tradeFishAccountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tradeFishChooseAccountLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(tradeFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tradeFishAmountPromptLabel)
                                        .addComponent(tradeFishEnterAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(tradeFishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tradeFishSubmitButton)
                                        .addComponent(tradeFishStatusLabel))
                                .addContainerGap(66, Short.MAX_VALUE))
        );

        transactionsTabbedPane.addTab("Trade Fish", tradeFishPanel);

        reportCrabLabel.setText("You can report a thieving crab that appeared near your river.");

        reportCrabMafiaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        reportCrabMafiaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportCrabMafiaComboBoxActionPerformed(evt);
            }
        });

        reportCrabMafiaPromptLabel.setText("Choose which mafia the crab came from.");

        reportCrabAmountPromptLabel.setText("Enter the amount of fish it stole:");

        reportCrabEnterAmountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportCrabEnterAmountTextFieldActionPerformed(evt);
            }
        });

        reportCrabGarbagePromptLabel.setText("Enter the amount of garbage it left behind:");

        reportCrabEnterGarbageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportCrabEnterGarbageTextFieldActionPerformed(evt);
            }
        });

        reportCrabSubmitButton.setText("Submit");
        reportCrabSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportCrabSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reportCrabPanelLayout = new javax.swing.GroupLayout(reportCrabPanel);
        reportCrabPanel.setLayout(reportCrabPanelLayout);
        reportCrabPanelLayout.setHorizontalGroup(
                reportCrabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(reportCrabPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(reportCrabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(reportCrabLabel)
                                        .addGroup(reportCrabPanelLayout.createSequentialGroup()
                                                .addComponent(reportCrabMafiaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(reportCrabMafiaPromptLabel))
                                        .addGroup(reportCrabPanelLayout.createSequentialGroup()
                                                .addComponent(reportCrabAmountPromptLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(reportCrabEnterAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(reportCrabPanelLayout.createSequentialGroup()
                                                .addComponent(reportCrabGarbagePromptLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(reportCrabEnterGarbageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(reportCrabPanelLayout.createSequentialGroup()
                                                .addComponent(reportCrabSubmitButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(reportCrabStatusLabel)))
                                .addContainerGap(110, Short.MAX_VALUE))
        );
        reportCrabPanelLayout.setVerticalGroup(
                reportCrabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(reportCrabPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(reportCrabLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(reportCrabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(reportCrabMafiaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(reportCrabMafiaPromptLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(reportCrabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(reportCrabAmountPromptLabel)
                                        .addComponent(reportCrabEnterAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(reportCrabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(reportCrabGarbagePromptLabel)
                                        .addComponent(reportCrabEnterGarbageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(reportCrabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(reportCrabSubmitButton)
                                        .addComponent(reportCrabStatusLabel))
                                .addContainerGap(40, Short.MAX_VALUE))
        );

        transactionsTabbedPane.addTab("Report a Crab", reportCrabPanel);

        javax.swing.GroupLayout transactionsPanelLayout = new javax.swing.GroupLayout(transactionsPanel);
        transactionsPanel.setLayout(transactionsPanelLayout);
        transactionsPanelLayout.setHorizontalGroup(
                transactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(transactionsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(transactionsTabbedPane)
                                .addContainerGap())
        );
        transactionsPanelLayout.setVerticalGroup(
                transactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(transactionsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(transactionsTabbedPane)
                                .addContainerGap())
        );

        tabbedPane.addTab("Transactions", transactionsPanel);

        statusAccountComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));

        statusAccountPromptLabel.setText("Select an account holder!");

        statusTextArea.setColumns(20);
        statusTextArea.setRows(5);
        statusScrollPane.setViewportView(statusTextArea);

        statusStatusButton.setText("Status");
        statusStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusStatusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
                statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(statusPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(statusPanelLayout.createSequentialGroup()
                                                .addComponent(statusAccountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(statusAccountPromptLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(statusStatusButton)
                                                .addGap(0, 172, Short.MAX_VALUE))
                                        .addComponent(statusScrollPane))
                                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
                statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(statusPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(statusAccountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(statusAccountPromptLabel)
                                        .addComponent(statusStatusButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statusScrollPane)
                                .addContainerGap())
        );

        tabbedPane.addTab("Status", statusPanel);

        userSelectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));

        userSelectPromptLabel.setText("Select an account holder!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tabbedPane)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(userSelectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(userSelectPromptLabel))
                                                        .addComponent(titleLabel))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(titleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(userSelectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(userSelectPromptLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tabbedPane)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try {
            query.shutDown();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosed

    private void tradeFishEnterAmountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tradeFishEnterAmountTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tradeFishEnterAmountTextFieldActionPerformed

    private void sellFishEnterAmountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellFishEnterAmountTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sellFishEnterAmountTextFieldActionPerformed

    private void sellFishEnterGarbageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellFishEnterGarbageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sellFishEnterGarbageTextFieldActionPerformed

    private void sellFishSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellFishSubmitButtonActionPerformed
        if (!userSelectComboBox.getSelectedItem().toString().equals("Poseidon")) {
            River sender = (River) userSelectComboBox.getSelectedItem();
            int amount;
            int garbage;

            try {
                amount = Integer.parseInt(sellFishEnterAmountTextField.getText());
                garbage = Integer.parseInt(sellFishEnterGarbageTextField.getText());
            } catch (NumberFormatException e) {
                sellFishStatusLabel.setText("Garbage and fish amounts must be integers.");
                return;
            }

            FishSale sale = new FishSale(sender, amount, garbage);

            try {
                query.sellFish(sale);
            } catch (Exception e) {
                e.printStackTrace();
            }

            sellFishStatusLabel.setText("Fish sale will update on next dug shell.");
            sellFishEnterAmountTextField.setText("");
            sellFishEnterGarbageTextField.setText("");
        } else {
            sellFishStatusLabel.setText("Poseidon may not sell fish.");
        }
    }//GEN-LAST:event_sellFishSubmitButtonActionPerformed

    private void reportCrabMafiaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportCrabMafiaComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportCrabMafiaComboBoxActionPerformed

    private void reportCrabEnterAmountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportCrabEnterAmountTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportCrabEnterAmountTextFieldActionPerformed

    private void reportCrabEnterGarbageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportCrabEnterGarbageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportCrabEnterGarbageTextFieldActionPerformed

    private void createRiverEnterGarbageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRiverEnterGarbageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createRiverEnterGarbageTextFieldActionPerformed

    private void createRiverEnterFishTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRiverEnterFishTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createRiverEnterFishTextFieldActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            query.shutDown();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    private void digShellsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_digShellsButtonActionPerformed
        if (userSelectComboBox.getSelectedItem().toString().equals("Poseidon")) {
            try {
                query.digShells();
            } catch (Exception e) {
                e.printStackTrace();
            }
            digShellsStatusLabel.setText("Successfully dug a shell.");
        } else {
            digShellsStatusLabel.setText("Only Poseidon can dig up shells.");
        }
    }//GEN-LAST:event_digShellsButtonActionPerformed

    private void createRiverSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRiverSubmitButtonActionPerformed
        if (userSelectComboBox.getSelectedItem().toString().equals("Poseidon")) {
            String name = createRiverEnterNameTextField.getText();

            int garbage;
            int amount;
            try {
                amount = Integer.parseInt(createRiverEnterFishTextField.getText());
                garbage = Integer.parseInt(createRiverEnterGarbageTextField.getText());
            } catch (NumberFormatException e) {
                createRiverStatusLabel.setText("Garbage and fish amounts must be integers.");
                return;
            }

            River river = new River(name, amount, garbage);
            accounts.add(river);
            createRiverEnterGarbageTextField.setText("");
            createRiverEnterFishTextField.setText("");
            createRiverEnterNameTextField.setText("");

            createRiverStatusLabel.setText("Successfully created river.");
            rebuildAccountComboBoxes();
            return;
        } else {
            createRiverStatusLabel.setText("Only Poseidon can register new rivers.");
        }
    }//GEN-LAST:event_createRiverSubmitButtonActionPerformed

    private void tradeFishSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tradeFishSubmitButtonActionPerformed
        if (!userSelectComboBox.getSelectedItem().toString().equals("Poseidon")) {
            River sender = (River) userSelectComboBox.getSelectedItem();
            River recipient = (River) tradeFishAccountComboBox.getSelectedItem();

            if (recipient.toString().equals("Poseidon")) {
                tradeFishStatusLabel.setText("Poseidon may not be traded fish.");
                return;
            }

            if (recipient.toString() == sender.toString()) {
                tradeFishStatusLabel.setText("You may not trade fish with yourself!");
                return;
            }

            int amount;
            try {
                amount = Integer.parseInt(tradeFishEnterAmountTextField.getText());
            } catch (NumberFormatException e) {
                tradeFishStatusLabel.setText("Fish amount must be an integer.");
                return;
            }

            FishTrade trade = new FishTrade(sender, amount, recipient);

            try {
                query.tradeFish(trade);
            } catch (Exception e) {
                e.printStackTrace();
            }

            tradeFishStatusLabel.setText("Fish trade will update on next dug shell.");
            tradeFishEnterAmountTextField.setText("");
        } else {
            tradeFishStatusLabel.setText("Poseidon may not trade fish.");
        }
    }//GEN-LAST:event_tradeFishSubmitButtonActionPerformed

    private void reportCrabSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportCrabSubmitButtonActionPerformed
        if (!userSelectComboBox.getSelectedItem().toString().equals("Poseidon")) {
            River sender = (River) userSelectComboBox.getSelectedItem();
            String mafia = reportCrabMafiaComboBox.getSelectedItem().toString();

            int garbage;
            int amount;
            try {
                amount = Integer.parseInt(reportCrabEnterAmountTextField.getText());
                garbage = Integer.parseInt(reportCrabEnterGarbageTextField.getText());
            } catch (NumberFormatException e) {
                reportCrabStatusLabel.setText("Garbage and fish amounts must be integers.");
                return;
            }

            CrabCatch crab = new CrabCatch(sender, amount, mafia, garbage);

            try {
                query.catchCrab(crab);
            } catch (Exception e) {
                e.printStackTrace();
            }

            reportCrabStatusLabel.setText("Crab catch will update on next dug shell.");
            reportCrabEnterAmountTextField.setText("");
            reportCrabEnterGarbageTextField.setText("");
        } else {
            reportCrabStatusLabel.setText("Poseidon may not report crab catches.");
        }
    }//GEN-LAST:event_reportCrabSubmitButtonActionPerformed

    private void statusStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusStatusButtonActionPerformed
        River sender = (River) statusAccountComboBox.getSelectedItem();
        ArrayList<Shell> chain;
        try {
            chain = query.getChain();
        } catch (Exception e) {
            e.printStackTrace();
            statusTextArea.setText("Something went wrong. Check stack trace.");
            return;
        }

        if (sender.toString().equals("Poseidon")) {
            statusTextArea.setText("Total shells dug up: " + chain.size());
        } else {
            int fishAmt = sender.getAmount();
            int garbageAmt = sender.getGarbageAmount();
            int[] crabsCaught = new int[3];
            crabsCaught[0] = 0; // Beta Cancri
            crabsCaught[1] = 0; // Karka Rashi
            crabsCaught[2] = 0; // Shiny Kinglers

            for (Shell shell : chain) {
                for (Transaction transaction : shell.getTransactions()) {
                    if (!transaction.getSender().toString().equals(sender.toString()))
                        continue; // If this person didn't send it, move on

                    if (transaction instanceof FishSale) {
                        FishSale sale = (FishSale) transaction;
                        fishAmt -= sale.getAmount();
                        garbageAmt -= sale.getGarbageAmount();
                    } else if (transaction instanceof FishTrade) {
                        FishTrade trade = (FishTrade) transaction;
                        fishAmt -= trade.getAmount();
                    } else if (transaction instanceof CrabCatch) {
                        CrabCatch crab = (CrabCatch) transaction;
                        fishAmt -= crab.getAmount();
                        garbageAmt += crab.getGarbageAmount();
                        switch (crab.getMafia()) {
                            case "Beta Cancri":
                                crabsCaught[0] += 1;
                                break;
                            case "Karka Rashi":
                                crabsCaught[1] += 1;
                                break;
                            case "Shiny Kinglers":
                                crabsCaught[2] += 1;
                                break;
                        }
                    }
                }
            }

            statusTextArea.setText("Current fish amount: " + fishAmt
                    + "\nCurrent garbage amount:" + garbageAmt
                    + "\nCrabs caught by mafia:"
                    + "\n\tBeta Cancri: " + crabsCaught[0]
                    + "\n\tKarka Rashi: " + crabsCaught[1]
                    + "\n\tShiny Kinglers: " + crabsCaught[2]);
        }
    }//GEN-LAST:event_statusStatusButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PoseidonApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PoseidonApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PoseidonApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PoseidonApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PoseidonApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField createRiverEnterFishTextField;
    private javax.swing.JTextField createRiverEnterGarbageTextField;
    private javax.swing.JTextField createRiverEnterNameTextField;
    private javax.swing.JLabel createRiverFishPromptLabel;
    private javax.swing.JLabel createRiverGarbagePromptLabel;
    private javax.swing.JLabel createRiverLabel;
    private javax.swing.JLabel createRiverNamePromptLabel;
    private javax.swing.JPanel createRiverPanel;
    private javax.swing.JLabel createRiverStatusLabel;
    private javax.swing.JButton createRiverSubmitButton;
    private javax.swing.JButton digShellsButton;
    private javax.swing.JLabel digShellsLabel;
    private javax.swing.JPanel digShellsPanel;
    private javax.swing.JLabel digShellsStatusLabel;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel reportCrabAmountPromptLabel;
    private javax.swing.JTextField reportCrabEnterAmountTextField;
    private javax.swing.JTextField reportCrabEnterGarbageTextField;
    private javax.swing.JLabel reportCrabGarbagePromptLabel;
    private javax.swing.JLabel reportCrabLabel;
    private javax.swing.JComboBox<String> reportCrabMafiaComboBox;
    private javax.swing.JLabel reportCrabMafiaPromptLabel;
    private javax.swing.JPanel reportCrabPanel;
    private javax.swing.JLabel reportCrabStatusLabel;
    private javax.swing.JButton reportCrabSubmitButton;
    private javax.swing.JLabel sellFishAmountPromptLabel;
    private javax.swing.JTextField sellFishEnterAmountTextField;
    private javax.swing.JTextField sellFishEnterGarbageTextField;
    private javax.swing.JLabel sellFishGarbagePromptLabel;
    private javax.swing.JLabel sellFishLabel;
    private javax.swing.JPanel sellFishPanel;
    private javax.swing.JLabel sellFishStatusLabel;
    private javax.swing.JButton sellFishSubmitButton;
    private javax.swing.JComboBox<String> statusAccountComboBox;
    private javax.swing.JLabel statusAccountPromptLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JScrollPane statusScrollPane;
    private javax.swing.JButton statusStatusButton;
    private javax.swing.JTextArea statusTextArea;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JComboBox<String> tradeFishAccountComboBox;
    private javax.swing.JLabel tradeFishAmountPromptLabel;
    private javax.swing.JLabel tradeFishChooseAccountLabel;
    private javax.swing.JTextField tradeFishEnterAmountTextField;
    private javax.swing.JLabel tradeFishLabel;
    private javax.swing.JPanel tradeFishPanel;
    private javax.swing.JLabel tradeFishStatusLabel;
    private javax.swing.JButton tradeFishSubmitButton;
    private javax.swing.JPanel transactionsPanel;
    private javax.swing.JTabbedPane transactionsTabbedPane;
    private javax.swing.JComboBox<String> userSelectComboBox;
    private javax.swing.JLabel userSelectPromptLabel;
    // End of variables declaration//GEN-END:variables
    private ArrayList<River> accounts;
    private QueryShellchain query;
    private ArrayList<String> mafias;
}
